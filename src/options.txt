-- This file is used to generate the OptBuiltins.hs file.

-- The following preamble is copied as-is.

module OptBuiltins where

import OptParse

data OptAction =
    DefaultAction
    | UsageAction
    | VersionAction
    | EvalAction String
    | ReadDefsAction String
    | ReadOptsAction String
        -- The next two are processed AFTER options are done,
        -- so they're lists for queueing the args
    | ExpandAction [String]
    | ShowAction [String]
    deriving (Show)

data OptBuiltin = OptBuiltin {
        shortOpts   :: String
      , longOpts    :: [String]
      , argument    :: ArgDesc
      , action      :: String -> OptAction
      , tag         :: String
      , description :: [String]
    }

shortOptions = concatMap (entries shortOpts) builtinOptions
longOptions  = concatMap (entries longOpts) builtinOptions

entries acc opt = map (flip (,) (arg, act)) $ acc opt
    where arg = argument opt
          act = action opt

-- End of preamble. Everything below gets parsed into option structures.

---

    -h, --help
        :const UsageAction
        Print this help text and exit.

    -V, --version
        :const VersionAction
        Print version and exit.

    --eval EXPR
        :EvalAction
        Evaluate EXPR

    --read-defs FILE
        :ReadDefsAction
        Read plines definitions from the specified file.
        If FILE refers to a directory, then all files in that directory
        are read.

    --read-opts FILE
        :ReadOptsAction
        Read option definitions from the specified file.
        If FILE refers to a directory, then all files in that directory
        are read.

    --expand NAME
        :ExpandAction . return
        Expand the requested pline or chain, and then exit.

    --show NAME
        :ShowAction . return
        Give the detailed composition of the requested pline or chain,
        and then exit.
